AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  resource-service

  Sample SAM Template for resource-service

Parameters:
  Stage:
    Type: String
    Default: DEV

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Tracing: Active
  Api:
    TracingEnabled: true

Resources:
  PublicAPIs:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      MethodSettings:
        - LoggingLevel: ERROR
          MetricsEnabled: True
          ResourcePath: "/*" # allows for logging on any resource
          HttpMethod: "*" # allows for logging on any method
      Auth:
        ApiKeyRequired: false

  ProtectedAPIs:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      MethodSettings:
        - LoggingLevel: ERROR
          MetricsEnabled: True
          ResourcePath: "/*" # allows for logging on any resource
          HttpMethod: "*" # allows for logging on any method
      Auth:
        ApiKeyRequired: false
        DefaultAuthorizer: FirebaseTokenAuthorizer
        Authorizers:
          FirebaseTokenAuthorizer:
            FunctionArn: !GetAtt FirebaseTokenAuthorizer.Arn

  CreateCheckoutSession:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: app/
      Handler: checkout.lambda_handler
      Runtime: python3.9
      Architectures:
        # - x86_64
        - arm64 # if you are using Apple M1
      Timeout: 30
      Events:
        POST:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref ProtectedAPIs
            Path: /checkout
            Method: post

  StripeConnectOnboard:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: app/
      Handler: onboard.lambda_handler
      Runtime: python3.9
      Architectures:
        # - x86_64
        - arm64 # if you are using Apple M1
      Timeout: 30
      Events:
        POST:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref ProtectedAPIs
            Path: /onboard
            Method: post

  StripeConnectOnboardAcceptWebhook:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: app/
      Handler: onboard_accept.lambda_handler
      Runtime: python3.9
      Architectures:
        # - x86_64
        - arm64 # if you are using Apple M1
      Timeout: 30
      Events:
        POST:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref PublicAPIs
            Path: /onboard/accept
            Method: post

  AcceptPaymentWebhook:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: app/
      Handler: accept.lambda_handler
      Runtime: python3.9
      Architectures:
        # - x86_64
        - arm64 # if you are using Apple M1
      Timeout: 30
      Events:
        POST:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref PublicAPIs
            Path: /accept
            Method: post

  FirebaseTokenAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app/
      Handler: authorizer.lambda_handler
      Runtime: python3.9
      Architectures:
        # - x86_64
        - arm64 # if you are using Apple M1

  # ApplicationResourceGroup:
  #   Type: AWS::ResourceGroups::Group
  #   Properties:
  #     Name:
  #       Fn::Join:
  #       - ''
  #       - - ApplicationInsights-SAM-
  #         - Ref: AWS::StackName
  #     ResourceQuery:
  #       Type: CLOUDFORMATION_STACK_1_0
  # ApplicationInsightsMonitoring:
  #   Type: AWS::ApplicationInsights::Application
  #   Properties:
  #     ResourceGroupName:
  #       Fn::Join:
  #       - ''
  #       - - ApplicationInsights-SAM-
  #         - Ref: AWS::StackName
  #     AutoConfigurationEnabled: 'true'
  #   DependsOn: ApplicationResourceGroup
Outputs:
  PublicAPIs:
    Description: API PublicAPIs endpoint URL for DEV stage for Hello World function
    Value: !Sub "https://${PublicAPIs}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/echo"
  ProtectedAPIs:
    Description: API PublicAPIs endpoint URL for DEV stage for Hello World function
    Value: !Sub "https://${ProtectedAPIs}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/echo"
