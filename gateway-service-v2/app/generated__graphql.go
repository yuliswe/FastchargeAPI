// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package main

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// BillUsageCreateUsageLog includes the requested fields of the GraphQL type UsageLog.
type BillUsageCreateUsageLog struct {
	CreatedAt uint64 `json:"createdAt"`
}

// GetCreatedAt returns BillUsageCreateUsageLog.CreatedAt, and is useful for accessing the field via an interface.
func (v *BillUsageCreateUsageLog) GetCreatedAt() uint64 { return v.CreatedAt }

// BillUsageResponse is returned by BillUsage on success.
type BillUsageResponse struct {
	CreateUsageLog BillUsageCreateUsageLog `json:"createUsageLog"`
}

// GetCreateUsageLog returns BillUsageResponse.CreateUsageLog, and is useful for accessing the field via an interface.
func (v *BillUsageResponse) GetCreateUsageLog() BillUsageCreateUsageLog { return v.CreateUsageLog }

// GetAppRoutesApp includes the requested fields of the GraphQL type App.
type GetAppRoutesApp struct {
	Name        string                             `json:"name"`
	GatewayMode string                             `json:"gatewayMode"`
	Endpoints   []GetAppRoutesAppEndpointsEndpoint `json:"endpoints"`
}

// GetName returns GetAppRoutesApp.Name, and is useful for accessing the field via an interface.
func (v *GetAppRoutesApp) GetName() string { return v.Name }

// GetGatewayMode returns GetAppRoutesApp.GatewayMode, and is useful for accessing the field via an interface.
func (v *GetAppRoutesApp) GetGatewayMode() string { return v.GatewayMode }

// GetEndpoints returns GetAppRoutesApp.Endpoints, and is useful for accessing the field via an interface.
func (v *GetAppRoutesApp) GetEndpoints() []GetAppRoutesAppEndpointsEndpoint { return v.Endpoints }

// GetAppRoutesAppEndpointsEndpoint includes the requested fields of the GraphQL type Endpoint.
type GetAppRoutesAppEndpointsEndpoint struct {
	Path        string `json:"path"`
	Destination string `json:"destination"`
}

// GetPath returns GetAppRoutesAppEndpointsEndpoint.Path, and is useful for accessing the field via an interface.
func (v *GetAppRoutesAppEndpointsEndpoint) GetPath() string { return v.Path }

// GetDestination returns GetAppRoutesAppEndpointsEndpoint.Destination, and is useful for accessing the field via an interface.
func (v *GetAppRoutesAppEndpointsEndpoint) GetDestination() string { return v.Destination }

// GetAppRoutesResponse is returned by GetAppRoutes on success.
type GetAppRoutesResponse struct {
	App GetAppRoutesApp `json:"app"`
}

// GetApp returns GetAppRoutesResponse.App, and is useful for accessing the field via an interface.
func (v *GetAppRoutesResponse) GetApp() GetAppRoutesApp { return v.App }

// __BillUsageInput is used internally by genqlient
type __BillUsageInput struct {
	User_email string `json:"user_email"`
	App_name   string `json:"app_name"`
	Path       string `json:"path"`
}

// GetUser_email returns __BillUsageInput.User_email, and is useful for accessing the field via an interface.
func (v *__BillUsageInput) GetUser_email() string { return v.User_email }

// GetApp_name returns __BillUsageInput.App_name, and is useful for accessing the field via an interface.
func (v *__BillUsageInput) GetApp_name() string { return v.App_name }

// GetPath returns __BillUsageInput.Path, and is useful for accessing the field via an interface.
func (v *__BillUsageInput) GetPath() string { return v.Path }

// __GetAppRoutesInput is used internally by genqlient
type __GetAppRoutesInput struct {
	App string `json:"app"`
}

// GetApp returns __GetAppRoutesInput.App, and is useful for accessing the field via an interface.
func (v *__GetAppRoutesInput) GetApp() string { return v.App }

func BillUsage(
	ctx context.Context,
	client graphql.Client,
	user_email string,
	app_name string,
	path string,
) (*BillUsageResponse, error) {
	req := &graphql.Request{
		OpName: "BillUsage",
		Query: `
mutation BillUsage ($user_email: Email!, $app_name: String!, $path: String!) {
	createUsageLog(subscriber: $user_email, app: $app_name, path: $path) {
		createdAt
	}
}
`,
		Variables: &__BillUsageInput{
			User_email: user_email,
			App_name:   app_name,
			Path:       path,
		},
	}
	var err error

	var data BillUsageResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetAppRoutes(
	ctx context.Context,
	client graphql.Client,
	app string,
) (*GetAppRoutesResponse, error) {
	req := &graphql.Request{
		OpName: "GetAppRoutes",
		Query: `
query GetAppRoutes ($app: String) {
	app(name: $app) {
		name
		gatewayMode
		endpoints {
			path
			destination
		}
	}
}
`,
		Variables: &__GetAppRoutesInput{
			App: app,
		},
	}
	var err error

	var data GetAppRoutesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
