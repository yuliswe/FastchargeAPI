{
  "name": "gateway-service",
  "version": "1.0.0",
  "description": "This is a sample template for gateway-service - Below is a brief explanation of what we have generated for you:",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "run-ts": "node -r esbuild-register --loader esbuild-register/loader",
    "gen": "go run github.com/Khan/genqlient",
    "try-build:gateway": "cd gateway && go build && rm gateway",
    "try-build:cors": "cd cors && go build && rm cors",
    "prebuild": "npm run typecheck",
    "build:x86": "sam build --parameter-overrides Architecture=x86_64 --use-container --build-image=public.ecr.aws/sam/build-go1.x:latest-x86_64",
    "build:arm64": "sam build --parameter-overrides Architecture=arm64",
    "build": "npm run build:arm64",
    "prestart": "npm run build && npm run genenvfile",
    "start": "sam local start-api -p 6000 --warm-containers eager --env-vars .samdevenv.json",
    "poststart": "npm run delenvfile",
    "watch": "npx nodemon --config ./nodemon.config.json -x \"npm run start\"",
    "logs": "sam logs --tail",
    "logs:live": "sam logs --config-env live --tail",
    "deploy": "npm run build && sam deploy",
    "deploy:live": "npm run build && sam deploy --config-env live",
    "pretypecheck": "npm run gen",
    "typecheck": "(npm run try-build:gateway) && (npm run try-build:cors)",
    "test": "jest",
    "genenvfile": "npm run run-ts printEnvFile.ts .samdevenv.json",
    "delenvfile": "rm .samdevenv.json"
  },
  "devDependencies": {
    "@types/aws-lambda": "^8.10.114",
    "@types/node-fetch": "^2.6.2",
    "@types/tmp": "^0.2.3",
    "@types/uuid": "^9.0.1",
    "aws-lambda": "^1.0.7",
    "aws-sdk": "^2.1343.0",
    "chalk": "^5.2.0",
    "node-fetch": "^2.6.9",
    "tmp": "^0.2.1",
    "typescript": "^4.9.5",
    "uuid": "^9.0.0",
    "graphql-service-apollo": "file:../graphql-service/apollo"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {}
}
