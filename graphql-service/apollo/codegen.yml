# This configuration file tells GraphQL Code Generator how
# to generate types based on our schema.
# documents:
#   - "./cron-jobs/*.ts"

projects:
  operations:
    schema: "./src/__generated__/Public.final.graphql"
    documents:
      - "./src/cron-jobs/*.ts"
      - "./src/functions/*.ts"
      - "./src/resolvers/*.ts"
      - "./src/pks/*.ts"
      - "./tests/resolvers/*/*.ts"
      - "./tests/resolvers/*/*.graphql"
    extensions:
      codegen:
        generates:
          # Specify where our generated types should live.
          src/__generated__/gql/:
            preset: client
            config:
              # namingConvention: keep

  resolvers:
    extensions:
      codegen:
        generates:
          src/__generated__/resolvers-types.ts:
            schema: "src/__generated__/Public.final.graphql"
            plugins:
              - "typescript"
              - "typescript-resolvers"
              - "typescript-operations"
            config:
              typesPrefix: GQL
              useIndexSignature: true
              # More on this below!
              contextType: "../RequestContext#RequestContext"
              mapperTypeSuffix: "Data"
              # wrapFieldDefinitions: true
              # resolverTypeWrapperSignature: "{[k in keyof T]: (T[k] | ((args: any, context: RequestContext, info: GraphQLResolveInfo) => T[k]) | ((args: any, context: RequestContext, info: GraphQLResolveInfo) => Promise<T[k]>))}"
              useTypeImports: false
              # avoidOptionals: true
              makeResolverTypeCallable: true
              customResolveInfo: "@apollo/cache-control-types#GraphQLResolveInfoWithCacheControl"
              # defaultMapper: "{[k in keyof {T}]: {T}[k] | (() => {T})}"
              mappers:
                App: "@/src/database/models/App#App"
                AppTag: "@/src/database/models/AppTag#AppTag"
                User: "@/src/database/models/User#User"
                Endpoint: "@/src/database/models/Endpoint#Endpoint"
                Pricing: "@/src/database/models/Pricing#Pricing"
                Subscribe: "@/src/database/models/Subscription#Subscription"
                UsageLog: "@/src/database/models/UsageLog#UsageLog"
                StripePaymentAccept: "@/src/database/models/StripePaymentAccept#StripePaymentAccept"
                StripeTransfer: "@/src/database/models/StripeTransfer#StripeTransfer"
                AccountActivity: "@/src/database/models/AccountActivity#AccountActivity"
                AccountHistory: "@/src/database/models/AccountHistory#AccountHistory"
                UsageSummary: "@/src/database/models/UsageSummary#UsageSummary"
                Secret: "@/src/database/models/Secret#Secret"
                GatewayRequestCounter: "@/src/database/models/GatewayRequestCounter#GatewayRequestCounter"
                GatewayRequestDecisionCache: "@/src/database/models/GatewayRequestDecisionCache#GatewayRequestDecisionCache"
                UserAppToken: "@/src/database/models/UserAppToken#UserAppToken"
                SiteMetaData: "@/src/database/models/SiteMetaData#SiteMetaData"
              enumValues:
                GatewayMode: "@/src/__generated__/gql/graphql#GatewayMode"
                PricingAvailability: "@/src/__generated__/gql/graphql#PricingAvailability"
                HttpMethod: "@/src/__generated__/gql/graphql#HttpMethod"
                AccountActivityReason: "@/src/__generated__/gql/graphql#AccountActivityReason"
                AccountActivityStatus: "@/src/__generated__/gql/graphql#AccountActivityStatus"
                AccountActivityType: "@/src/__generated__/gql/graphql#AccountActivityType"
                SiteMetaDataKey: "@/src/__generated__/gql/graphql#SiteMetaDataKey"
                StripeTransferStatus: "@/src/__generated__/gql/graphql#StripeTransferStatus"
                UsageLogStatus: "@/src/__generated__/gql/graphql#UsageLogStatus"
                UsageSummaryStatus: "@/src/__generated__/gql/graphql#UsageSummaryStatus"
                StripePaymentAcceptStatus: "@/src/__generated__/gql/graphql#StripePaymentAcceptStatus"
                Currency: "@/src/__generated__/gql/graphql#Currency"
                AppVisibility: "@/src/__generated__/gql/graphql#AppVisibility"
                GatewayDecisionResponseReason: "@/src/__generated__/gql/graphql#GatewayDecisionResponseReason"
              scalars:
                Email: string
                Timestamp: number
                NonNegativeDecimal: string
                URL: string
                Any: unknown
