mutation CreateUser($email: Email!) {
    createUser(email: $email) {
        pk
        email
    }
}

query GetFastchargeAPIIdToken($user: ID!) {
    user(pk: $user) {
        email
        getFastchargeAPIIdToken
    }
}

mutation AddMoneyToUserAccount($user: ID!, $amount: NonNegativeDecimal!) {
    createAccountActivity(user: $user, amount: $amount, type: debit, reason: topup, description: "Topup") {
        createdAt
        user {
            updateBalance {
                balance
            }
        }
    }
}

query GetUserAccountBalance($user: ID!) {
    user(pk: $user) {
        balance
    }
}

query VerifyAccountUpdate($user: ID!) {
    user(pk: $user) {
        author
    }
}

mutation CreateTestApp($owner: ID!, $name: String!) {
    createApp(owner: $owner, name: $name) {
        pk
        name
    }
}

query ListAppEndpoints($name: String!) {
    app(name: $name) {
        endpoints {
            pk
        }
    }
}

mutation CreateEndpoint($app: ID!, $path: String!, $method: HTTPMethod!, $destination: String!, $description: String) {
    createEndpoint(app: $app, path: $path, method: $method, destination: $destination, description: $description) {
        pk
        path
        description
        destination
    }
}

query VerifyAppDelete($name: String!) {
    app(name: $name) {
        pk
    }
}

query VerifyAppUpdate($name: String!) {
    app(name: $name) {
        pk
        name
        description
        repository
        readme
        homepage
        visibility
    }
}

query GetAppPricing($appName: String!) {
    app(name: $appName) {
        pricingPlans {
            pk
            name
            minMonthlyCharge
            chargePerRequest
            freeQuota
            callToAction
            visible
        }
    }
}

mutation CreatePricing(
    $app: ID!
    $name: String!
    $minMonthlyCharge: NonNegativeDecimal!
    $chargePerRequest: NonNegativeDecimal!
    $freeQuota: Int!
    $callToAction: String!
    $visible: Boolean!
) {
    createPricing(
        app: $app
        name: $name
        minMonthlyCharge: $minMonthlyCharge
        chargePerRequest: $chargePerRequest
        freeQuota: $freeQuota
        callToAction: $callToAction
        visible: $visible
    ) {
        pk
        name
        minMonthlyCharge
        chargePerRequest
        freeQuota
        callToAction
        visible
    }
}

query VerifyUserIsSubscribedToPricingPlan($subscriber: ID!, $app: String!) {
    subscription(subscriber: $subscriber, app: $app) {
        pk
    }
}

mutation SubscribeUserToPricingPlan($subscriber: ID!, $pricing: ID!) {
    createSubscription(subscriber: $subscriber, pricing: $pricing) {
        pk
    }
}

query CreateAppToken($app: ID!, $subscriber: ID!) {
    user(pk: $subscriber) {
        createAppToken(app: $app) {
            token
        }
    }
}

query VerifyAPIUpdate($endpoint: ID!) {
    endpoint(pk: $endpoint) {
        pk
        path
        method
        description
        destination
    }
}
